services:

  gui-app:
    container_name: gui-app
    build:
      context: /gui
      dockerfile: Dockerfile
    environment:
      ENVIRONMENT: "local"
      DISPLAY: "${DISPLAY}"
    networks:
      - app-network
    ports:
      - 5000:5000
    depends_on:
      scraper-app:
        condition: service_healthy
      analizer-app:
        condition: service_healthy
    command:
      bash -c "pipenv run python main.py"
    volumes:
      - ./gui/:/app
      - /tmp/.X11-unix:/tmp/.X11-unix

  scraper-app:
    container_name: scraper-app
    build:
      context: /scraper
      dockerfile: Dockerfile
    environment:
      ENVIRONMENT: "local"
    networks:
      - app-network
    depends_on:
      postgres_db:
        condition: service_healthy
    command:
      bash -c "pipenv run python main.py"
    volumes:
      - ./scraper/:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://scraper-app:5000"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  postgres_db:
    container_name: container-pg
    image: postgres
    hostname: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  analizer-app:
    container_name: analizer-app
    build:
      context: /analizer
      dockerfile: Dockerfile
    environment:
      ENVIRONMENT: "local"
    networks:
      - app-network
    ports:
      - 5001:5001
    depends_on:
      scraper-app:
        condition: service_healthy
      postgres_db:
        condition: service_healthy
    command:
      bash -c "pipenv run python main.py"
    volumes:
      - ./analizer/:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://analizer-app:5001"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: